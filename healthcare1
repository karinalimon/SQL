CREATE TABLE billing (
    patient_id INTEGER
  	, insurance_provider TEXT
    , procedure_code INTEGER
    , procedure_description TEXT
    , procedure_cost REAL
    , procedure_bill REAL
    , payment_received REAL
);


INSERT INTO billing (patient_id, insurance_provider, procedure_code, procedure_description, procedure_cost, procedure_bill, payment_received)
VALUES
    (137845, 'Insurance A', 42213, 'Office Visit', 335.00, 83.75, 35.00)
  , (187738, 'Insurance C', 85706, 'ECG', 425.00, 63.75, 50.00)
  , (214007, 'Insurance A', 80048, 'Basic Metabolic Panel', 200.00, 50.00, 0.00)
  , (250077, 'Insurance B', 80525, 'Complete Blood Count', 225.00, 78.75, 0.00)
  , (281938, 'Insurance B', 80449, 'Glucose Tolerance Test', 150.00, 52.50, 15.00)
  , (296309, 'Insurance C', 42213, 'Office Visit', 335.00, 50.25, 30.00)
  , (301544, 'Insurance C', 80061, 'Lipid Panel', 135.00, 20.25, 20.25)
  , (390731, 'Insurance B', 80449, 'Glucose Tolerance Test', 150.00, 52.50, 0.00)
    ;

--Some patients have already made payments toward their bill and we’d like to see how much each patient has remaining. Display the patient ID and create a new column that calculates 
--how much each patient still needs to pay. Call the new column payment_remaining.  
select patient_id, procedure_bill-payment_received AS payment_remaining
from billing;

--What fraction of their bill has each patient paid so far? Select every patient ID, the procedure bill, and create a new column that calculates the fraction of what the patient has paid 
--toward their procedure bill. Call the new column payment_fraction and sort it from low to high.
Select patient_id, procedure_bill, procedure_cost/payment_received AS payment_fraction
from billing
order by payment_fraction;

--Convert the fractions into percentages. Display the patient ID, payment_fraction, and add a column displaying the percent of the bill that the patient has paid, rounded to one place. 
--Call the new column payment_percent.
Select patient_id, payment_received/procedure_bill AS payment_fraction, round((payment_received/procedure_bill)*100, 1) AS payment_percent
from billing;

--Display the patient ID, the payment_fraction column, and a new column titled payment_status, which categorizes the payment_fraction column into three categories: For 100% payment, 
--write “paid”. If the payment is less than 100% but more than 0%, use “in progress”. If the patient hasn’t made a payment, write “no payment”.
select patient_id, payment_received/procedure_bill AS payment_fraction, CASE WHEN (payment_received/procedure_bill) = 1 THEN "paid" WHEN (payment_received/procedure_bill) = 0 
THEN "no payment" ELSE "in progress" END AS payment_status
from billing;

--create more categories in payment_status.
select patient_id, payment_received/procedure_bill AS payment_fraction, CASE WHEN (payment_received/procedure_bill) = 1 THEN "paid" WHEN (payment_received/procedure_bill) = 0 THEN "no payment"
WHEN (payment_received/procedure_bill) >= .75 THEN "75%+" WHEN (payment_received/procedure_bill) >= .5 THEN "50%+" WHEN (payment_received/procedure_bill) >= .25 THEN "25%+" ELSE "Under 25%+" 
END AS payment_status
from billing;

